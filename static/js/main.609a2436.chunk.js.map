{"version":3,"sources":["images/tr.svg","images/en.svg","components/Header.tsx","store/actions/countryAction.ts","services/apiService.ts","utils/api.ts","components/Countries.tsx","store/actions/covidStateAction.ts","components/TotalInfo.tsx","components/LastDaysInfo.js","components/WorldMap.jsx","App.tsx","reportWebVitals.ts","i18n/config.js","store/reducers/countryReducer.ts","store/reducers/covidStateReducer.ts","store/index.ts","index.tsx"],"names":["Header","i18n","useTranslation","handleChangeLanguage","lang","changeLanguage","className","src","flagTr","alt","onClick","flagEn","setWorldWideInfo","worldwide","dispatch","a","type","payload","ApiService","console","log","activeState","axios","create","baseURL","headers","get","data","sort","c1","c2","Countries","useSelector","state","covidState","useDispatch","t","useState","countries","setCountries","worldWide","setWorldwide","getWorldwide","handleOnClick","country","iso","undefined","countryInfo","iso2","changeActiveCountry","handleCovidStateClick","selectActiveCovidState","useEffect","getAllCountries","then","value","catch","err","Row","Col","Card","Body","style","height","ListGroup","Item","variant","cursor","cases","thousandSeparator","displayType","map","index","active","deaths","flag","marginLeft","TotalInfo","selectedCountry","setData","getWorldwideData","param","chartData","buildChartData","push","name","recovered","RADIAN","Math","PI","COLORS","PieChart","width","Pie","dataKey","isAnimationActive","outerRadius","fill","labelLine","label","cx","cy","midAngle","innerRadius","percent","radius","x","cos","y","sin","textAnchor","dominantBaseline","floor","toFixed","entry","Cell","length","Tooltip","LastDaysInfo","setChartData","result","timeline","yesterdayIndex","vaka","death","e","ResponsiveContainer","LineChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","YAxis","Legend","Line","stroke","activeDot","r","WorldMap","activeCountry","position","setPosition","zoom","setZoom","setMap","getCountries","lat","long","flyTo","MapContainer","whenCreated","center","scrollWheelZoom","TileLayer","attribution","url","percentage","Circle","color","weight","fillColor","Popup","backgroundImage","App","Container","fluid","sm","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","use","initReactI18next","init","fallbackLng","lng","resources","tr","translations","require","en","ns","defaultNS","languages","defaultState","countryReducer","action","covidStateReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.609a2436.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/tr.2880fc8e.svg\";","export default __webpack_public_path__ + \"static/media/en.a3e6d90f.svg\";","import React from 'react';\r\nimport {useTranslation} from \"react-i18next\";\r\nimport flagTr from '../images/tr.svg';\r\nimport flagEn from '../images/en.svg';\r\n\r\nfunction Header() {\r\n    const { i18n } = useTranslation();\r\n    const handleChangeLanguage = (lang:string) => () => {\r\n        return i18n.changeLanguage(lang);\r\n    };\r\n    return (\r\n        <div className=\"app-title\">\r\n            <img src={flagTr} className=\"translation-flag\" alt=\"logo\" onClick={handleChangeLanguage('tr')} />\r\n            <img src={flagEn} className=\"translation-flag en\" alt=\"logo\" onClick={handleChangeLanguage('en')} />\r\n        </div>\r\n    );\r\n}\r\nexport default Header;","import {Country, CountryDispatch} from \"../../types/country\";\r\nimport {Worldwide} from \"../../types/worldwide\";\r\n\r\n\r\nexport const selectCountry = (iso: string) => async (dispatch: CountryDispatch) => {\r\n\r\n    dispatch({type: \"SELECT_COUNTRY\", payload: iso});\r\n};\r\n\r\nexport const changeActiveCountry = (country: Country) => async (dispatch: CountryDispatch) => {\r\n\r\n    dispatch({type: \"CHANGE_ACTIVE_COUNTRY\", payload: country});\r\n};\r\n\r\nexport const setWorldWideInfo = (worldwide: Worldwide) => async (dispatch: CountryDispatch) => {\r\n\r\n    dispatch({type: \"SET_WORLDWIDE_INFO\", payload: worldwide});\r\n};","import {Country} from \"../types/country\";\r\nimport {AxiosResponse} from \"axios\";\r\nimport api from \"../utils/api\";\r\n\r\nexport default class ApiService {\r\n\r\n    constructor() {\r\n        console.log(\"API service called.\");\r\n    }\r\n\r\n    async getAllCountries(activeState: string): Promise<Country[]> {\r\n        const {data} : AxiosResponse<Country[]> = await api().get<Country[]>(\"countries\");\r\n        data.sort(function (c1, c2) {return (c2 as any)[activeState] as number - (c1 as any)[activeState] as number});\r\n        return data;\r\n    }\r\n}","import axios from \"axios\";\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default () => {\r\n    return axios.create({\r\n        baseURL: \"https://disease.sh/v3/covid-19/\",\r\n        headers: {\r\n            \"Content-type\": \"application/json\"\r\n        }\r\n    })\r\n}\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Card, Col, ListGroup, Row} from \"react-bootstrap\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {Country} from \"../types/country\";\r\nimport axios, {AxiosResponse} from \"axios\";\r\nimport NumberFormat from 'react-number-format';\r\nimport {Worldwide} from \"../types/worldwide\";\r\nimport {changeActiveCountry, selectCountry, setWorldWideInfo} from \"../store/actions/countryAction\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppState} from \"../store\";\r\nimport {selectActiveCovidState} from \"../store/actions/covidStateAction\";\r\nimport ApiService from \"../services/apiService\";\r\n\r\nfunction Countries() {\r\n\r\n    const {activeState} = useSelector((state:AppState) => state.covidState);\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n    const [countries, setCountries] = useState<Country[]>([]);\r\n    const [worldWide, setWorldwide] = useState<Worldwide>();\r\n\r\n    const getWorldwide = async () => {\r\n        const {data}: AxiosResponse<Worldwide> = await axios.get<Worldwide>(\"https://disease.sh/v3/covid-19/all\");\r\n        setWorldwide(data);\r\n        dispatch(setWorldWideInfo(data))\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        let apiService = new ApiService();\r\n        apiService.getAllCountries(activeState).then(value => {\r\n             setCountries(value);\r\n         }).catch(err => console.log(err));\r\n\r\n        getWorldwide();\r\n    }, [activeState]);\r\n\r\n\r\n    function handleOnClick(country:Country) {\r\n        dispatch(selectCountry(country !== undefined && country ? country.countryInfo.iso2 : \"all\"));\r\n        dispatch(changeActiveCountry(country));\r\n    }\r\n\r\n    function handleCovidStateClick(state: string) {\r\n        dispatch(selectActiveCovidState(state));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className=\"mb-2\">\r\n\r\n                <Col onClick={ () => handleCovidStateClick(\"cases\")} className=\"d-flex align-items-stretch covid-state\">\r\n                    <Card className={activeState === \"cases\" ? \"active-state w-100\" : \"w-100\"}>\r\n                        <Card.Body>{t('total')}</Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col onClick={ () => handleCovidStateClick(\"active\")} className=\"d-flex align-items-stretch covid-state\">\r\n                    <Card className={activeState === \"active\" ? \"active-state w-100\" : \"w-100\"}>\r\n                        <Card.Body>{t('active')}</Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col onClick={ () => handleCovidStateClick(\"deaths\")} className=\"d-flex align-items-stretch covid-state\">\r\n                    <Card className={activeState === \"deaths\" ? \"active-state w-100\" : \"w-100\"}>\r\n                        <Card.Body>{t('deaths')}</Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Card style={{height: \"530px\"}}>\r\n                {/*<Card.Header className=\"bg-white p-3\"><h3> {t('countries')} </h3> </Card.Header>*/}\r\n                <ListGroup.Item variant=\"primary\" style={{cursor: \"pointer\"}}  onClick={() => handleOnClick({} as Country)} className=\"border-0 fw-bold d-flex justify-content-between align-items-start \">\r\n                    <div>Dünya Geneli</div>\r\n                    <span ><NumberFormat value={worldWide?.cases} thousandSeparator={true} displayType={'text'}  /></span>\r\n                </ListGroup.Item>\r\n                <ListGroup style={{cursor: \"pointer\"}} variant=\"flush\" className=\"country-list\">\r\n\r\n                    {countries.map((country, index) => {\r\n\r\n                        let className = \"d-flex justify-content-between align-items-start \";\r\n                        if(index %2 === 0) {\r\n                            className += \"list-group-item-secondary\";\r\n                        }\r\n\r\n                        let data= country.cases;\r\n                        if(activeState === \"active\") {\r\n\r\n                            data = country.active;\r\n                        } else if (activeState === \"deaths\") {\r\n\r\n                            data = country.deaths;\r\n                        }\r\n\r\n                        return <ListGroup.Item key={country.country} onClick={() => handleOnClick(country)} className={className}>\r\n\r\n                            <div >\r\n                                <img src={country.countryInfo.flag} height={15} alt={country.countryInfo.iso2} />\r\n                                <span style={{marginLeft: \"5px\"}}>{country.country}</span>\r\n                            </div>\r\n                           <span className=\"fw-bold\"> <NumberFormat value={data} thousandSeparator={true} displayType={'text'}  /></span>\r\n                        </ListGroup.Item>;\r\n                    })}\r\n                </ListGroup>\r\n            </Card>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Countries;","import {CovidStateDispatch} from \"../../types/covidState\";\r\n\r\nexport const selectActiveCovidState = (state: string) => async (dispatch: CovidStateDispatch) => {\r\n\r\n    dispatch({type: \"SELECT_STATE\", payload: state});\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Card, Col, Row, Table} from \"react-bootstrap\";\r\nimport {PieChart, Pie, Tooltip, Cell} from 'recharts';\r\nimport {Worldwide} from \"../types/worldwide\";\r\nimport axios, {AxiosResponse} from \"axios\";\r\nimport {Country} from \"../types/country\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppState} from \"../store\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\ninterface ChartData {\r\n    name:string,\r\n    value: number\r\n}\r\n\r\nfunction TotalInfo() {\r\n\r\n    const { t } = useTranslation();\r\n    const {selectedCountry} = useSelector((state:AppState) => state.country);\r\n    const [worldwide, setWorldwide] = useState<Worldwide>();\r\n    const [data, setData] = useState<ChartData[]>([]);\r\n    const getWorldwideData = async () => {\r\n\r\n        let param = \"\";\r\n        if(selectedCountry !== \"all\") {\r\n\r\n            param = \"countries/\"\r\n        }\r\n        const {data}: AxiosResponse<Worldwide> = await axios.get<Worldwide>(\"https://disease.sh/v3/covid-19/\" + param + selectedCountry);\r\n        setWorldwide(data);\r\n        let chartData = buildChartData(data);\r\n        setData(chartData);\r\n    };\r\n\r\n    const buildChartData = (data: Worldwide) => {\r\n\r\n      let chartData = [];\r\n      chartData.push({name : \"Aktif\", value: data.active});\r\n      chartData.push({name : \"Ölüm\", value: data.deaths});\r\n      chartData.push({name : \"İyileşen\", value: data.recovered});\r\n\r\n      return chartData;\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        console.log(selectedCountry)\r\n        getWorldwideData();\r\n    }, [selectedCountry]);\r\n\r\n\r\n    const RADIAN = Math.PI / 180;\r\n    const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent }: any) => {\r\n        const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n        const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n        const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n        console.log(percent)\r\n        return (\r\n            <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n                {`${Math.floor(percent * 100).toFixed(0)}%`}\r\n            </text>\r\n        );\r\n    };\r\n\r\n    const COLORS = ['#0d6efd', '#d8343f', '#ffc62a'];\r\n    return (\r\n        <div >\r\n            <Card className=\"mt-4\">\r\n                <Card.Body>\r\n                    <Row>\r\n                        <Col>\r\n                            <div  >\r\n                                <div>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <label>\r\n                                                <i className=\"fa fa-circle text-warning\" /> <span>{t('recovered')} : </span>\r\n                                                <NumberFormat value={worldwide?.recovered} thousandSeparator={true} displayType={'text'}  />\r\n                                            </label>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <label>\r\n                                                <i className=\"fa fa-circle text-primary\" /> <span>{t('active')} : </span>\r\n                                                <NumberFormat value={worldwide?.active} thousandSeparator={true} displayType={'text'}  />\r\n                                            </label>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <label> <i className=\"fa fa-circle text-danger\" /> <span>{t('deaths')} : </span>\r\n                                                <NumberFormat value={worldwide?.deaths} thousandSeparator={true} displayType={'text'}  />\r\n                                            </label>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </div>\r\n                                <PieChart width={400} height={330}>\r\n                                    <Pie\r\n                                        dataKey=\"value\"\r\n                                        isAnimationActive={true}\r\n                                        data={data}\r\n                                        outerRadius={150}\r\n                                        fill=\"#8884d8\"\r\n                                        labelLine={false}\r\n                                        label={renderCustomizedLabel}\r\n                                        // label\r\n                                    >\r\n                                        {data.map((entry, index) => (\r\n                                            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                                        ))}\r\n                                    </Pie>\r\n                                    <Tooltip />\r\n                                </PieChart>\r\n                            </div>\r\n                        </Col>\r\n\r\n                    </Row>\r\n\r\n\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TotalInfo;","import React, {useEffect, useState} from 'react';\r\nimport {Card} from \"react-bootstrap\";\r\nimport {CartesianGrid, Legend, Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis} from 'recharts';\r\nimport axios from \"axios\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nfunction LastDaysInfo() {\r\n\r\n    const {selectedCountry} = useSelector((state) => state.country);\r\n    const [chartData, setChartData] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        const response = axios.get(\"https://disease.sh/v3/covid-19/historical/\"+ selectedCountry +\"?lastdays=30\").then(result => {\r\n\r\n            try {\r\n                var cases = [];\r\n                var deaths = [];\r\n                if(selectedCountry === \"all\") {\r\n\r\n                    cases = result.data.cases;\r\n                    deaths = result.data.deaths;\r\n                } else {\r\n\r\n                    cases = result.data.timeline.cases;\r\n                    deaths = result.data.timeline.deaths;\r\n                }\r\n\r\n                var data = [];\r\n                let yesterdayIndex;\r\n                for(var name in cases) {\r\n\r\n                    let vaka = 0, death = 0;\r\n                    if(yesterdayIndex === undefined) {\r\n\r\n                        yesterdayIndex = name;\r\n                    }\r\n                    vaka = cases[name] - cases[yesterdayIndex];\r\n                    death = deaths[name] - deaths[yesterdayIndex];\r\n                    data.push({name: name, vaka: vaka, death: death});\r\n\r\n                    yesterdayIndex = name;\r\n                }\r\n\r\n                setChartData(data);\r\n            } catch (e) {\r\n\r\n            }\r\n\r\n        });\r\n\r\n    }, [selectedCountry]);\r\n\r\n\r\n    return (\r\n        <div className=\"mt-4\">\r\n            <Card >\r\n                <Card.Body>\r\n                    <h4 className=\"mb-4\">{selectedCountry} - son 30 Gün</h4>\r\n\r\n                    <div style={{height: \"280px\"}}>\r\n                        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                            <LineChart\r\n                                width={500}\r\n                                height={300}\r\n                                data={chartData}\r\n                                margin={{\r\n                                    top: 5,\r\n                                    right: 30,\r\n                                    left: 20,\r\n                                    bottom: 5,\r\n                                }}\r\n                            >\r\n                                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                <XAxis dataKey=\"name\" />\r\n                                <YAxis />\r\n                                <Tooltip />\r\n                                <Legend />\r\n                                <Line type=\"monotone\" dataKey=\"vaka\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n                                <Line type=\"monotone\" dataKey=\"death\" stroke=\"#82ca9d\" />\r\n                            </LineChart>\r\n                        </ResponsiveContainer>\r\n                    </div>\r\n\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\nexport  default LastDaysInfo;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Circle, MapContainer, Popup, TileLayer} from \"react-leaflet\";\r\nimport \"../Map.css\";\r\nimport axios from \"axios\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\n\r\nfunction WorldMap() {\r\n\r\n    const {selectedCountry} = useSelector(state => state.country);\r\n    const {activeCountry} = useSelector(state => state.country);\r\n    const [countries, setCountries] = useState([]);\r\n    const [position, setPosition] = useState([39.925533, 32.866287]); // Ankara\r\n    const [zoom, setZoom] = useState(2);\r\n    const [map, setMap] = useState(null);\r\n\r\n    const getCountries = async () => {\r\n\r\n        const {data} = await axios.get(\"https://disease.sh/v3/covid-19/countries\");\r\n        data.sort(function (c1, c2) {return c2.cases - c1.cases});\r\n        setCountries(data);\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        getCountries();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        setPosition(selectedCountry !== \"all\" ? [activeCountry.countryInfo.lat, activeCountry.countryInfo.long] : [39.925533, 32.866287]);\r\n        setZoom(selectedCountry !== \"all\" ? 5 : 2);\r\n    }, [activeCountry]);\r\n\r\n    if (map) {\r\n        map.setZoom(zoom);\r\n        map.flyTo(position);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n            <MapContainer  whenCreated={setMap} center={position} zoom={zoom} scrollWheelZoom={true}>\r\n                <TileLayer\r\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                />\r\n\r\n                {countries.map((country, index) => {\r\n\r\n                    let percentage = (country.active / 18010074) * 5000000;\r\n                    let color = \"red\";\r\n                    return <Circle key={country.country} center={[country.countryInfo.lat, country.countryInfo.long]} color={color} weight={2} fillColor={color} radius={ percentage}>\r\n                        <Popup>\r\n                            <div className=\"info-container\">\r\n                                <div\r\n                                    className=\"info-flag\"\r\n                                    style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\r\n                                />\r\n                                <div className=\"info-name\">{country.country}</div>\r\n                                <div className=\"info-confirmed\">\r\n                                    Cases:  <NumberFormat value={country.cases} thousandSeparator={true} displayType={'text'}  />\r\n                                </div>\r\n                                <div className=\"info-recovered\">\r\n                                    Recovered: <NumberFormat value={country.recovered} thousandSeparator={true} displayType={'text'}  />\r\n                                </div>\r\n                                <div className=\"info-deaths\">\r\n                                    Deaths: <NumberFormat value={country.deaths} thousandSeparator={true} displayType={'text'}  />\r\n                                </div>\r\n                            </div>\r\n                        </Popup>\r\n\r\n                    </Circle>\r\n\r\n                })}\r\n\r\n            </MapContainer>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default WorldMap;\r\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from \"./components/Header\";\nimport {Col, Container, Row} from \"react-bootstrap\";\nimport Countries from \"./components/Countries\";\nimport TotalInfo from \"./components/TotalInfo\";\nimport LastDaysInfo from \"./components/LastDaysInfo\";\nimport \"leaflet/dist/leaflet.css\";\nimport WorldMap from \"./components/WorldMap\";\n\n\nfunction App() {\n  return (\n\n      <Container fluid className=\"px-container\">\n        <Header/>\n        <Row className=\"content\">\n          <Col sm={4}>\n              <Countries/>\n              <TotalInfo/>\n          </Col>\n          <Col sm={8}>\n              <WorldMap/>\n              <LastDaysInfo/>\n          </Col>\n        </Row>\n      </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\ni18n.use(initReactI18next).init({\r\n    fallbackLng: 'tr',\r\n    lng: 'tr',\r\n    resources: {\r\n        tr: {\r\n            translations: require('./locales/tr/translations.json')\r\n        },\r\n        en: {\r\n            translations: require('./locales/en/translations.json')\r\n        }\r\n    },\r\n    ns: ['translations'],\r\n    defaultNS: 'translations'\r\n});\r\n\r\ni18n.languages = ['tr', 'en'];\r\n\r\nexport default i18n;","import {Country, CountryAction, CountryState} from \"../../types/country\";\r\nimport {Worldwide} from \"../../types/worldwide\";\r\n\r\nconst defaultState: CountryState = {\r\n\r\n    data: [] as Country[],\r\n    activeCountry: {} as Country,\r\n    selectedCountry: \"all\",\r\n    worldwide: {} as Worldwide\r\n};\r\n\r\nconst countryReducer = (state: CountryState = defaultState, action: CountryAction) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case \"SELECT_COUNTRY\":\r\n            return {...state, selectedCountry: action.payload};\r\n        case \"CHANGE_ACTIVE_COUNTRY\":\r\n            return {...state, activeCountry: action.payload};\r\n        case \"SET_WORLDWIDE_INFO\":\r\n            return {...state, worldwide: action.payload};\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\n\r\nexport default countryReducer;","import {CovidState, CovidStateAction} from \"../../types/covidState\";\r\n\r\nconst defaultState: CovidState = {\r\n\r\n    activeState: \"cases\"\r\n};\r\n\r\nconst covidStateReducer = (state = defaultState, action: CovidStateAction) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case \"SELECT_STATE\":\r\n            return {...state, activeState: action.payload};\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\n\r\nexport default covidStateReducer;","import {combineReducers} from \"redux\";\r\nimport countryReducer from \"./reducers/countryReducer\";\r\nimport {CountryState} from \"../types/country\";\r\nimport {CovidState} from \"../types/covidState\";\r\nimport covidStateReducer from \"./reducers/covidStateReducer\";\r\n\r\nexport interface AppState {\r\n    country: CountryState;\r\n    covidState: CovidState\r\n}\r\n\r\nconst rootReducer = combineReducers<AppState>({\r\n    country: countryReducer,\r\n    covidState: covidStateReducer\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './i18n/config';\nimport rootReducer from \"./store\";\nimport thunk from \"redux-thunk\";\nimport {applyMiddleware, createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport 'font-awesome/css/font-awesome.min.css';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n\n    document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}